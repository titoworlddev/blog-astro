---
import MainLayout from '../layouts/MainLayout.astro';
import { getAllPosts } from '../utils/posts';

// Get all posts for client-side search
const allPosts = await getAllPosts();
---

<MainLayout 
	title="Buscar - Tech Blog" 
	description="Busca posts en el blog por título, descripción o categoría" 
	pageTitle="Buscar"
	showBackButton={true}
>
	<div class="search-page">
		<div class="container">
			<section class="search-section">
				<div class="search-header">
					<h2>Resultados de búsqueda</h2>
					<p class="search-query" style="display: none;">
						Buscando: <strong id="search-query-text"></strong>
					</p>
					<!-- DEBUG INFO -->
					<div id="debug-info" style="background: #f0f0f0; padding: 10px; margin: 10px 0; font-family: monospace; font-size: 12px; color: black;">
						<strong>DEBUG:</strong><br/>
						Cargando...
					</div>
				</div>

				<div class="search-form-container">
					<form class="search-form" method="GET" action="/buscar">
						<div class="search-input-group">
							<input 
								id="search-input"
								type="text" 
								name="q" 
								placeholder="Buscar posts..." 
								class="search-input"
								autofocus
							/>
							<button type="submit" class="search-button">
								<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<path d="M21 21L16.514 16.506L21 21ZM19 10.5C19 15.194 15.194 19 10.5 19C5.806 19 2 15.194 2 10.5C2 5.806 5.806 2 10.5 2C15.194 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
								</svg>
							</button>
						</div>
					</form>
				</div>

				<div id="search-results-container">
					<div class="search-placeholder">
						<svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M21 21L16.514 16.506L21 21ZM19 10.5C19 15.194 15.194 19 10.5 19C5.806 19 2 15.194 2 10.5 2C5.806 5.806 2 10.5 2C15.194 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
						<h3>¿Qué estás buscando?</h3>
						<p>Busca posts por título, descripción o categoría</p>
					</div>
				</div>
			</section>
		</div>
	</div>
</MainLayout>

<script define:vars={{ allPosts }}>
	// Client-side search functionality
	document.addEventListener('DOMContentLoaded', function() {
		const searchInput = document.getElementById('search-input');
		const searchQueryText = document.getElementById('search-query-text');
		const searchQuerySection = document.querySelector('.search-query');
		const debugInfo = document.getElementById('debug-info');
		const resultsContainer = document.getElementById('search-results-container');
		
		// Get search query from URL
		const urlParams = new URLSearchParams(window.location.search);
		const searchQuery = urlParams.get('q')?.trim() || '';
		
		// Update debug info
		debugInfo.innerHTML = `
			<strong>DEBUG:</strong><br/>
			Full URL: ${window.location.href}<br/>
			Search Params: ${window.location.search}<br/>
			Query: "${searchQuery}"<br/>
			Query Length: ${searchQuery.length}<br/>
			Total Posts: ${allPosts.length}
		`;
		
		// Set search input value
		if (searchInput) {
			searchInput.value = searchQuery;
		}
		
		// Perform search if there's a query
		if (searchQuery && searchQuery.length > 0) {
			performSearch(searchQuery);
		}
	});
	
	function performSearch(query) {
		const searchQueryText = document.getElementById('search-query-text');
		const searchQuerySection = document.querySelector('.search-query');
		const debugInfo = document.getElementById('debug-info');
		const resultsContainer = document.getElementById('search-results-container');
		
		// Show search query
		if (searchQueryText) {
			searchQueryText.textContent = `"${query}"`;
		}
		if (searchQuerySection) {
			searchQuerySection.style.display = 'block';
		}
		
		// Filter posts
		const queryLower = query.toLowerCase();
		const results = allPosts.filter(post => {
			const title = post.data.title.toLowerCase();
			const description = post.data.description.toLowerCase();
			const category = post.data.category.toLowerCase();
			
			return title.includes(queryLower) || 
			       description.includes(queryLower) || 
			       category.includes(queryLower);
		});
		
		// Update debug info
		debugInfo.innerHTML = `
			<strong>DEBUG:</strong><br/>
			Full URL: ${window.location.href}<br/>
			Search Params: ${window.location.search}<br/>
			Query: "${query}"<br/>
			Query Length: ${query.length}<br/>
			Results Found: ${results.length}<br/>
			Total Posts: ${allPosts.length}
		`;
		
		// Display results
		displayResults(results);
	}
	
	function displayResults(results) {
		const resultsContainer = document.getElementById('search-results-container');
		
		if (results.length > 0) {
			resultsContainer.innerHTML = `
				<div class="search-results">
					<p class="results-count">
						${results.length} resultado${results.length !== 1 ? 's' : ''} encontrado${results.length !== 1 ? 's' : ''}
					</p>
					<div class="posts-grid">
						${results.map(post => `
							<article class="post-card">
								<a href="/blog/${post.id}" class="post-link">
									${post.data.image ? 
										`<div class="post-image">
											<img src="${post.data.image}" alt="${post.data.title}" />
										</div>` : 
										`<div class="post-image placeholder-image">
											<svg width="60" height="60" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
												<path d="M21 19V5C21 3.9 20.1 3 19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19ZM8.5 13.5L11 16.51L14.5 12L19 18H5L8.5 13.5Z" fill="currentColor"/>
											</svg>
										</div>`
									}
									<div class="post-content">
										<div class="post-meta">
											<span class="post-category">
												<a href="/categoria/${post.data.category}" class="category-tag">${post.data.category}</a>
											</span>
											<span class="post-date">${new Date(post.data.pubDate).toLocaleDateString('es-ES')}</span>
										</div>
										<h3 class="post-title">${post.data.title}</h3>
										<p class="post-description">${post.data.description}</p>
										<span class="read-more">Leer más</span>
									</div>
								</a>
							</article>
						`).join('')}
					</div>
				</div>
			`;
		} else {
			resultsContainer.innerHTML = `
				<div class="no-results">
					<svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M21 21L16.514 16.506L21 21ZM19 10.5C19 15.194 15.194 19 10.5 19C5.806 19 2 15.194 2 10.5C2 5.806 5.806 2 10.5 2C15.194 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
					</svg>
					<h3>No se encontraron resultados</h3>
					<p>Intenta con otros términos de búsqueda</p>
				</div>
			`;
		}
	}
</script>

<style>
	.search-page {
		min-height: 100vh;
		padding-top: 1rem;
	}

	.search-section {
		padding: 0 1rem;
		max-width: 1200px;
		margin: 0 auto;
	}

	.search-header {
		text-align: center;
		margin-bottom: 2rem;
	}

	.search-header h2 {
		color: #ffffff;
		font-size: 1.75rem;
		font-weight: 600;
		margin-bottom: 0.5rem;
	}

	.search-query {
		color: #cccccc;
		font-size: 1rem;
		margin: 0;
	}

	.search-query strong {
		color: #4fd1c7;
	}

	.search-form-container {
		max-width: 600px;
		margin: 0 auto 2rem auto;
	}

	.search-input-group {
		display: flex;
		gap: 0;
		background-color: #2a2a2a;
		border: 1px solid #333;
		border-radius: 0.5rem;
		overflow: hidden;
		transition: border-color 0.3s ease;
	}

	.search-input-group:focus-within {
		border-color: #4fd1c7;
		box-shadow: 0 0 0 3px rgba(79, 209, 199, 0.1);
	}

	.search-input {
		flex: 1;
		background: none;
		border: none;
		padding: 1rem;
		color: #ffffff;
		font-size: 1rem;
		outline: none;
	}

	.search-input::placeholder {
		color: #888;
	}

	.search-button {
		background-color: #4fd1c7;
		color: #1a1a1a;
		border: none;
		padding: 1rem;
		cursor: pointer;
		transition: background-color 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		min-width: 60px;
	}

	.search-button:hover {
		background-color: #6ee7dd;
	}

	.search-button svg {
		width: 20px;
		height: 20px;
	}

	.search-results {
		margin-top: 2rem;
	}

	.results-count {
		color: #cccccc;
		font-size: 0.9rem;
		margin-bottom: 1.5rem;
		text-align: center;
	}

	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
		gap: 2rem;
	}

	.no-results,
	.search-placeholder {
		text-align: center;
		padding: 3rem 1rem;
		color: #888;
	}

	.no-results svg,
	.search-placeholder svg {
		width: 64px;
		height: 64px;
		margin-bottom: 1rem;
		opacity: 0.5;
	}

	.no-results h3,
	.search-placeholder h3 {
		color: #cccccc;
		font-size: 1.25rem;
		margin-bottom: 0.5rem;
	}

	.no-results p,
	.search-placeholder p {
		color: #888;
		font-size: 1rem;
		margin: 0;
	}

	/* PostCard styles for search results */
	.post-card {
		background-color: #2a2a2a;
		border-radius: 1rem;
		overflow: hidden;
		transition: transform 0.3s ease, box-shadow 0.3s ease;
		border: 1px solid #333;
		display: flex;
		flex-direction: column;
		height: 100%;
	}

	.post-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 10px 30px rgba(79, 209, 199, 0.1);
	}

	.post-link {
		text-decoration: none;
		color: inherit;
		display: flex;
		flex-direction: column;
		height: 100%;
	}

	.post-image {
		width: 100%;
		height: 200px;
		overflow: hidden;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.post-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.placeholder-image {
		background-color: #1a1a1a;
		color: #666;
	}

	.post-content {
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		flex-grow: 1;
	}

	.post-meta {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1rem;
		font-size: 0.875rem;
	}

	.category-tag {
		background-color: #4fd1c7;
		color: #1a1a1a;
		padding: 0.25rem 0.75rem;
		border-radius: 1rem;
		font-weight: 500;
		text-decoration: none;
		font-size: 0.75rem;
		transition: background-color 0.3s ease;
	}

	.category-tag:hover {
		background-color: #6ee7dd;
	}

	.post-date {
		color: #888;
	}

	.post-title {
		color: #ffffff;
		font-size: 1.25rem;
		font-weight: 600;
		margin-bottom: 0.75rem;
		line-height: 1.4;
	}

	.post-description {
		color: #cccccc;
		font-size: 0.875rem;
		line-height: 1.6;
		margin-bottom: 1.5rem;
		flex-grow: 1;
	}

	.read-more {
		color: #4fd1c7;
		font-weight: 500;
		font-size: 0.875rem;
		transition: color 0.3s ease;
		margin-top: auto;
	}

	.post-link:hover .read-more {
		color: #6ee7dd;
	}

	@media (max-width: 768px) {
		.posts-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.search-header h2 {
			font-size: 1.5rem;
		}

		.search-input,
		.search-button {
			padding: 0.75rem;
		}

		.post-meta {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}
	}
</style>
